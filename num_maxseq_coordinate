# -*- coding: utf-8 -*-
import pandas as pd#科学计算
import numpy as np #数据分析
import re

def num_maxseq_coordinate(trajectorys):
    coordinate_x = []
    coordinate_y = []#定义轨迹数据y坐标存放的list
    coordinates = re.split(';|,',trajectorys)#将坐标轨迹按照“；”分隔
    
    for i in range(len(coordinates)):#将坐标轨迹的x放在coordinate_x中，将坐标轨迹的y放在coordinate_y中
        if i % 3 == 0: 
            x = coordinates[i]
            coordinate_x.append(x)
        elif i % 3 == 1:
            y = coordinates[i]
            coordinate_y.append(y)
         
    arr = np.zeros(len(coordinate_y))#创建数组存放轨迹数据y坐标值
    indicator = coordinate_y[0]#将第一个数据的y坐标为标志值
    count = 0#创建计数器
    #从第一个轨迹Y坐标开始，如果和indicator相同，则count加1，将其计数数组对应位置设置为count;
    #如果不等于indicator，则count置0，并将coordinate_y[i]赋给indicator，将count加1并赋给arr[i]
    for i in range(len(coordinate_y)):
        if indicator == coordinate_y[i]:
            count += 1
            arr[i] = count
        else:
            count = 0
            indicator = coordinate_y[i]
            count += 1
            arr[i] = count
    #在arr数组中找出最大值，并找出最大值对应的下标            
    max_y = max(arr)
    for j in range(len(arr)):
        if max_y == arr[j]:
            max_index = j
    #返回最大连续点数的y值，最大连续点数max_y，以及开始位置
    #return coordinate_y[max_index],int(max_y),int(max_index - max_y)
    return coordinate_y[max_index],int(max_y)
   
def  continuous_seq(trajectorys):
    coordinate_x = []
    coordinate_y = []#定义轨迹数据y坐标存放的list
    coordinates = re.split(';|,',trajectorys)#将坐标轨迹按照“；”分隔
    
    for i in range(len(coordinates)):#将坐标轨迹的x放在coordinate_x中，将坐标轨迹的y放在coordinate_y中
        if i % 3 == 0: 
            x = coordinates[i]
            coordinate_x.append(x)
        elif i % 3 == 1:
            y = coordinates[i]
            coordinate_y.append(y)
         
    arr = np.zeros(len(coordinate_y))#创建数组存放轨迹数据y坐标值
    indicator = coordinate_y[0]#将第一个数据的y坐标为标志值
    count = 0#创建计数器
    #从第一个轨迹Y坐标开始，如果和indicator相同，则count加1，将其计数数组对应位置设置为count;
    #如果不等于indicator，则count置0，并将coordinate_y[i]赋给indicator，将count加1并赋给arr[i]
    for i in range(len(coordinate_y)):
        if indicator == coordinate_y[i]:
            count += 1
            arr[i] = count
        else:
            count = 0
            indicator = coordinate_y[i]
            count += 1
            arr[i] = count
    #在arr数组中找出最大值，并找出最大值对应的下标            
    max_y = max(arr)
    for j in range(len(arr)):
        if max_y == arr[j]:
            max_index = j
    #print arr      
   
    #遍历数组arr,如果arr[i+1]等于1，则记录arr[i],coordinate[i],最终返回
    continuous_seq = []
    continuous_seq_coor = []

    for i in range(1,len(arr)):
        if arr[i] == 1:
            continuous_seq = arr[i-1]
            continuous_seq_coor = coordinate_y[i-1]
            print continuous_seq_coor,int(continuous_seq)

    l1 = len(arr)-1
    print coordinate_y[l1],int(arr[l1])
    
    #返回最大连续点数的y值，最大连续点数max_y，以及开始位置
    #return coordinate_y[max_index],int(max_y),int(max_index - max_y)
    #return coordinate_y[max_index],int(max_y)
